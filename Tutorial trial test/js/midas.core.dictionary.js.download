/// <reference path="typings/jquery/jquery.d.ts" />
/// <reference path="typings/jqueryui/jqueryui.d.ts" />
var Midas;
(function (Midas) {
    var Core;
    (function (Core) {
        var Dictionary = (function () {
            function Dictionary(init) {
                this._keys = new Array();
                this._values = new Array();
                this._keys = new Array();
                this._values = new Array();
                if (init != null) {
                    for (var x = 0; x < init.length; x++) {
                        this[init[x].key] = init[x].value;
                        this._keys.push(init[x].key);
                        this._values.push(init[x].value);
                    }
                }
            }
            Dictionary.prototype.add = function (key, value) {
                this[key] = value;
                this._keys.push(key);
                this._values.push(value);
            };
            Dictionary.prototype.remove = function (key) {
                var index = this._keys.indexOf(key, 0);
                this._keys.splice(index, 1);
                this._values.splice(index, 1);
                delete this[key];
            };
            Dictionary.prototype.keys = function () {
                return this._keys;
            };
            Dictionary.prototype.values = function () {
                return this._values;
            };
            Dictionary.prototype.containsKey = function (key) {
                if (typeof this[key] === "undefined") {
                    return false;
                }
                return true;
            };
            Dictionary.prototype.toLookup = function () {
                return this;
            };
            return Dictionary;
        }());
        Core.Dictionary = Dictionary;
    })(Core = Midas.Core || (Midas.Core = {}));
})(Midas || (Midas = {}));
//# sourceMappingURL=midas.core.Dictionary.js.map